{"version":3,"sources":["Components/Square/Square.jsx","Components/Score/Score.jsx","App.js","index.js"],"names":["Square","props","onClick","clickHandler","className","value","Score","firstPlayerScore","secondPlayerScore","App","index","squares","state","count","setState","checkEndGame","currentPlayer","isDraw","every","square","isWin","some","array","item","endGame","alert","Array","fill","this","map","bind","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAaeA,G,YAXA,SAAAC,GACb,OACE,qBACEC,QAASD,EAAME,aACfC,UAAU,SAFZ,SAIE,+BAAOH,EAAMI,YCGJC,G,MATD,SAAAL,GACZ,OACE,sBAAKG,UAAU,QAAf,UACE,oCAAOH,EAAMM,oBACb,oCAAON,EAAMO,0BCwFJC,E,kDAxFb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IASRE,aAAe,SAAAO,GACb,IAAMC,EAAU,EAAKC,MAAMD,QAEJ,OAAnBA,EAAQD,KACVC,EAAQD,GAAU,EAAKE,MAAMC,MAAQ,IAAM,EAAK,IAAM,IAEtD,EAAKC,SAAS,CAACD,MAAO,EAAKD,MAAMC,MAAQ,IACzC,EAAKC,SAAS,CAACH,YAEf,EAAKI,iBAnBU,EAuBnBA,aAAe,WACb,IAWMC,EAAiB,EAAKJ,MAAMC,MAAQ,IAAM,EAAK,IAAM,IAErDI,EAAS,EAAKL,MAAMD,QAAQO,OAAM,SAAAC,GAAM,OAAe,OAAXA,KAE5CC,EAfuB,CAC3B,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAO0BC,MAAK,SAAAC,GACtC,OAAOA,EAAMJ,OAAM,SAAAK,GACjB,OAAO,EAAKX,MAAMD,QAAQY,KAAUP,SAIpCI,GAASH,IACX,EAAKO,QAAQJ,EAAOH,EAAQD,IA9Cb,EAkDnBQ,QAAU,SAACJ,EAAOH,EAAQD,GACpBI,GACFK,MAAyB,MAAlBT,EAAyB,mBAAqB,qBAElC,MAAlBA,EACC,EAAKF,SAAS,CAACP,iBAAkB,EAAKK,MAAML,iBAAmB,IAC/D,EAAKO,SAAS,CAACN,kBAAmB,EAAKI,MAAMJ,kBAAoB,KAC1DS,GACTQ,MAAM,QAGR,EAAKX,SAAS,CAACH,QAASe,MAAM,GAAGC,KAAK,QACtC,EAAKb,SAAS,CAACD,MAAO,KA5DtB,EAAKD,MAAQ,CACXD,QAASe,MAAM,GAAGC,KAAK,MACvBd,MAAO,EACPN,iBAAkB,EAClBC,kBAAmB,GANJ,E,qDAiET,IAAD,OACP,OACE,sBAAKJ,UAAU,MAAf,UACE,cAAC,EAAD,CACEG,iBAAkBqB,KAAKhB,MAAML,iBAC7BC,kBAAmBoB,KAAKhB,MAAMJ,oBAEhC,qBAAKJ,UAAU,cAAf,SACIwB,KAAKhB,MAAMD,QAAQkB,KAAI,SAACV,EAAQT,GAChC,OACE,cAAC,EAAD,CAEEP,aAAc,EAAKA,aAAa2B,KAAK,EAAMpB,GAC3CL,MAAOc,GAFFT,e,GA7EHqB,IAAMC,WCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64344b79.chunk.js","sourcesContent":["import './Square.css';\r\n\r\nconst Square = props => {\r\n  return (\r\n    <div \r\n      onClick={props.clickHandler}\r\n      className=\"square\"\r\n    >\r\n      <span>{props.value}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import './Score.css';\r\n\r\nconst Score = props => {\r\n  return (\r\n    <div className=\"score\">\r\n      <p>X: {props.firstPlayerScore}</p>\r\n      <p>O: {props.secondPlayerScore}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\nimport './App.css';\nimport Square from './Components/Square/Square';\nimport Score from './Components/Score/Score';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      count: 0,\n      firstPlayerScore: 0,\n      secondPlayerScore: 0\n    };\n  }\n\n  clickHandler = index => {\n    const squares = this.state.squares;\n\n    if (squares[index] === null) {\n      squares[index] = (this.state.count % 2 === 0) ? 'X' : 'O';\n\n      this.setState({count: this.state.count + 1})\n      this.setState({squares});\n\n      this.checkEndGame();\n    }\n  }\n\n  checkEndGame = () => {\n    const WINNING_COMBINATIONS = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    const currentPlayer = (this.state.count % 2 === 0) ? 'X' : 'O';\n\n    const isDraw = this.state.squares.every(square => square !== null);\n\n    const isWin = WINNING_COMBINATIONS.some(array => {\n      return array.every(item => {\n        return this.state.squares[item] === currentPlayer;\n      });\n    });\n\n    if (isWin || isDraw) {\n      this.endGame(isWin, isDraw, currentPlayer);\n    }\n  }\n\n  endGame = (isWin, isDraw, currentPlayer) => {\n    if (isWin) {\n      alert((currentPlayer === 'X') ? 'First Player Won' : 'Second Player Won');\n\n      (currentPlayer === 'X') \n      ? this.setState({firstPlayerScore: this.state.firstPlayerScore + 1}) \n      : this.setState({secondPlayerScore: this.state.secondPlayerScore + 1});\n    } else if (isDraw) {\n      alert('Draw');\n    }\n\n    this.setState({squares: Array(9).fill(null)});\n    this.setState({count: 0})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Score \n          firstPlayerScore={this.state.firstPlayerScore}\n          secondPlayerScore={this.state.secondPlayerScore}\n        />\n        <div className=\"tic-tac-toe\">\n          { this.state.squares.map((square, index) => {\n            return (\n              <Square \n                key={index}\n                clickHandler={this.clickHandler.bind(this, index)}\n                value={square} \n              />\n            );\n          }) }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}